version: "3"
services:

  db:
    image: postgres:14
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      -  5432
    networks:
      - wookie-bookie
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      ./.env

    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python3 manage.py migrate &&
            python3 manage.py runserver 0.0.0.0:8000"
    networks:
      - wookie-bookie

  redis:
    image: redis
    networks:
    - wookie-bookie

  celery:
    restart: always
    build:
      context: .
    command: python -m celery -A configurations worker
    env_file:
      ./.env
    depends_on:
      - db
      - redis
      - api
    networks:
      - wookie-bookie

networks:
    wookie-bookie:
        driver: bridge